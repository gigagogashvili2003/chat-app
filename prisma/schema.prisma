
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id Int @default(autoincrement()) @id
  username String @unique
  email String @unique
  password String
  role Role @default(USER)
  active Boolean @default(false)
  verified Boolean @default(false)
  createdAt DateTime? @map(name: "created_at") @default(now())
  updatedAt DateTime? @map(name: "updated_at") @default(now())

  deactivatedUser DeactivatedUser?
  disabledUser DisabledUser?
  session Session[]

  @@map(name: "users")
}

model DeactivatedUser {
  id Int @default(autoincrement()) @id
  reason String
  userId Int @unique @map(name: "user_id")
  user User @relation(fields: [userId], references: [id])
  createdAt DateTime? @map(name: "created_at") @default(now())
  updatedAt DateTime? @map(name: "updated_at") @default(now())
  
  @@map(name: "deactivated_users")
}

model DisabledUser {
  id Int @default(autoincrement()) @id
  reason String
  disabledAt DateTime @map(name: "disabled_at")
  userId Int @unique @map(name: "user_id")
  user User @relation(fields: [userId], references: [id])
  createdAt DateTime? @map(name: "created_at") @default(now())
  updatedAt DateTime? @map(name: "updated_at") @default(now())

  @@map(name: "disabled_users")
}

model Session {
  id Int @default(autoincrement()) @id
  deviceId String @unique @map(name: "device_id")
  accessToken String @unique @map(name: "access_token")
  accessTokenExpiresAt DateTime @map(name: "access_token_expires_at")
  refreshToken String @unique @map(name: "refresh_token")
  refreshTokenExpiresAt DateTime @map(name: "refresh_token_expires_at")
  userId Int @map(name: "user_id")
  user User @relation(fields: [userId], references: [id])
  createdAt DateTime? @map(name: "created_at") @default(now())
  updatedAt DateTime? @map(name: "updated_at") @default(now())

  @@map(name: "sessions")
}

