services:
  api-gateway:
    build:
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile
    command: npm run start:dev api-gateway
    ports:
      - 8080:8080
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - db

  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
    command: npm run start:dev auth
    ports:
      - 3000:3000
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - db
      - redis

  nginx:
    image: nginx
    ports:
      - '80:80'
    volumes:
      - ./apps/api-gateway/nginx.conf:/etc/nginx/nginx.conf
      - ./apps/api-gateway/upstream.conf:/etc/nginx/upstream.conf

    depends_on:
      - api-gateway
      - auth

  db:
    image: postgres:latest
    ports:
      - 5432:5432
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data

  rabbitmq:
    image: 'rabbitmq:3-management'
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  redis:
    image: redis:latest
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  rabbitmq_data:
  redis_data:
